
/************************/
/*                      */
/*   inside Git Bash:   */
/*                      */
/************************/


A. Create repository:
=====================
1. get inside project directory --> "cd git.branch.merge.demo"
2. create an empty repository --> "git init"

B. Add files to "Staging" area
==============================
3. upload all files to staging area --> "git add ."
4. review staging area files (as "new files") --> "git status" 

C. Commit files to local storage
================================
5. commit files (and clean staging area) --> " git commit -m "initial commit" "  
6. show commits (or snapshot of commits) --> "git log"


/****************************/
/*                          */
/*   inside Github website  */
/*                          */
/****************************/

1. Create new Repository
2. Copy SSH and return back to "Git Bash" [SSH="git@github.com:aziza4/git.branch.merge.demo.git"]


/************************/
/*                      */
/*   inside Git Bash:   */
/*                      */
/************************/

7. connect local and remote repositories --> "git remote add github git@github.com:aziza4/git.branch.merge.demo.git
8. verify that we commit before push to remote --> "git log"
9. push master branch to remote repository --> "git push github master"



/*****************************/
/*                           */
/*   back to Github website  */
/*                           */
/*****************************/

4. We can now refresh our "git.branch.merge.demo" repository to see newly added files


/************************/
/*                      */
/*   inside Git Bash:   */
/*                      */
/************************/

D. Do some coding prior finishing-up 1st release
================================================
10. as an example, Lets add a second source file "mainline2.txt"...
11. add to local repository --> "git add ."
12. watch changed files prior to commit --> "git status"
13. commit --> "git commit -m "finished for 1st release"
14. add to remote repository --> "git push github master"

/*****************************/
/*                           */
/*   back to Github website  */
/*                           */
/*****************************/
5. Now we can see newly added files for 1st release.


==================================================================================
   now its time for:   ------  B R A N C H I N G  ------
==================================================================================

/************************/
/*                      */
/*   inside Git Bash:   */
/*                      */
/************************/

E. Team 1 - Branch the Mainline
================================
1. Review all existing branches --> "git branch" [we see "master" is the only branch, and the active branch] 
2. Create new "r2_feature1" branch --> "git branch r2_feature1" ["r2" stands for release 2]
3. Review all branches --> "git branch" [now we see both "master" and "r2_feature1" branches, where "master" is still the active branch]
4. Switch to branch --> "git checkout r2_feature1"
5. Review all branches --> "git branches" [now "r2_feature1" is active]

F. Team 2 - Clone the Mainline
==============================
1. copy from github website this project SSH